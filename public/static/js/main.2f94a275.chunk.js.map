{"version":3,"sources":["services/firebase.ts","assets/images/illustration.svg","assets/images/teste.svg","assets/images/google-icon.svg","components/Button.tsx","contexts/AuthContext.tsx","hooks/useAuth.ts","pages/Home.tsx","pages/NewRoom.tsx","components/Questions/index.tsx","assets/images/copy.svg","components/RoomCode.tsx","hooks/useRoom.ts","pages/Room.tsx","pages/AdminRoom.tsx","App.tsx","index.tsx"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","database","Button","isOutlined","props","className","AuthContext","createContext","AuthContextProvider","useState","user","setUser","a","provider","GoogleAuthProvider","signInWithPopup","result","displayName","photoURL","uid","Error","id","name","avatar","useEffect","unsubscribe","onAuthStateChanged","Provider","value","signInWithGoogle","children","useAuth","useContext","Home","history","useHistory","roomCode","setRoomCode","push","event","preventDefault","trim","ref","get","exists","console","log","src","ilustrationImg","alt","logoImg","onClick","googleIconImg","onSubmit","type","placeholder","onChange","target","NewRoom","newRoom","setNewRoom","roomRef","title","authorId","photo","firebaseRoom","key","to","Questions","content","author","RoomCode","navigator","clipboard","writeText","code","copyImg","useRoom","roomId","questions","setQuestions","setTitle","on","room","databaseRoom","val","firebaseQuestions","question","parsedQuestions","Object","entries","map","isHighlighted","isAnswered","likeCount","values","likes","length","hasLiked","some","like","off","Room","params","useParams","newQuestion","setNewQuestion","questionId","disabled","aria-label","handleLikeQuestion","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","AdminRoom","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f94a275.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\n\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst auth = firebase.auth();\r\nconst database = firebase.database();\r\n\r\nexport { firebase, auth, database }","export default __webpack_public_path__ + \"static/media/illustration.8aeb45a4.svg\";","export default __webpack_public_path__ + \"static/media/teste.fe09e322.svg\";","export default __webpack_public_path__ + \"static/media/google-icon.0dd78068.svg\";","import { ButtonHTMLAttributes } from 'react'\r\n\r\nimport '../styles/button.scss';\r\n\r\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement> & {\r\n    isOutlined?: boolean\r\n};\r\n\r\nexport function Button({ isOutlined = false, ...props }: ButtonProps) {\r\n    return (\r\n        <button className={`button ${isOutlined ? 'outlined ' : ''}`}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\n","import { createContext, ReactNode, useState, useEffect, } from 'react'\r\nimport { auth, firebase } from '../services/firebase';\r\n\r\n\r\n\r\ntype User = {\r\n    id: string,\r\n    name: string,\r\n    avatar: string,\r\n}\r\n\r\ntype AuthContextType = {\r\n    user: User | undefined;\r\n    signInWithGoogle: () => Promise<void>;\r\n}\r\n\r\ntype AuthContextProviderProps = {\r\n    children: ReactNode;\r\n}\r\n\r\nexport const AuthContext = createContext({} as AuthContextType);\r\n\r\nexport function AuthContextProvider(props: AuthContextProviderProps) {\r\n    const [user, setUser] = useState<User>();\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            if (user) {\r\n                const { displayName, photoURL, uid } = user\r\n\r\n                if (!displayName || !photoURL) {\r\n                    throw new Error('Missing Information from Google Account')\r\n                }\r\n\r\n                setUser({\r\n                    id: uid,\r\n                    name: displayName,\r\n                    avatar: photoURL,\r\n                })\r\n\r\n            }\r\n        })\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        }\r\n\r\n    }, [])\r\n\r\n    async function signInWithGoogle() {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n        const result = await auth.signInWithPopup(provider)\r\n\r\n        if (result.user) {\r\n            const { displayName, photoURL, uid } = result.user\r\n\r\n            if (!displayName || !photoURL) {\r\n                throw new Error('Missing Information from Google Account')\r\n            }\r\n\r\n            setUser({\r\n                id: uid,\r\n                name: displayName,\r\n                avatar: photoURL\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <AuthContext.Provider value={{ user, signInWithGoogle }}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n\r\n    );\r\n}","import { useContext } from 'react';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\n\r\nexport function useAuth() {\r\n    const value = useContext(AuthContext)\r\n\r\n    return value;\r\n}","\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FormEvent, useState } from 'react';\r\n\r\nimport { database } from '../services/firebase';\r\n\r\nimport ilustrationImg from '../assets/images/illustration.svg';\r\nimport logoImg from '../assets/images/teste.svg';\r\nimport googleIconImg from '../assets/images/google-icon.svg';\r\nimport { Button } from '../components/Button';\r\n\r\nimport '../styles/auth.scss';\r\nimport { useAuth } from '../hooks/useAuth';\r\n\r\n\r\nexport function Home() {\r\n\r\n    const history = useHistory();\r\n    const { user, signInWithGoogle } = useAuth();\r\n    const [roomCode, setRoomCode] = useState('');\r\n\r\n    async function handleCreateRoom() {\r\n\r\n        if (!user) {\r\n            await signInWithGoogle()\r\n        }\r\n        history.push('/rooms/new');\r\n\r\n    }\r\n\r\n    async function handleJoinRoom(event: FormEvent) {\r\n        event.preventDefault();\r\n\r\n        if (roomCode.trim() === '') {\r\n            return;\r\n        }\r\n\r\n        const roomRef = await database.ref(`rooms/${roomCode}`).get();\r\n\r\n        if (!roomRef.exists()) {\r\n            console.log(\"deu ruim\");\r\n\r\n        }\r\n\r\n        history.push(`rooms/${roomCode}`)\r\n    }\r\n\r\n    return (\r\n        <div id=\"page-auth\">\r\n            <aside>\r\n                <img src={ilustrationImg} alt=\"Ilustração\" />\r\n                <strong>Se tu dix feio</strong>\r\n                <p>Não seje tanso e tira suas duvidas sobre tainha</p>\r\n            </aside>\r\n            <main>\r\n                <div className=\"main-content\">\r\n                    <img src={logoImg} alt=\"Fala feio\" />\r\n                    <button onClick={handleCreateRoom} className=\"create-room\">\r\n                        <img src={googleIconImg} alt=\"\" />\r\n                        Cria sua sala com o Google\r\n                    </button>\r\n                    <div className=\"separator\" >\r\n                        Ou entre em uma sala abaixo\r\n                    </div>\r\n                    <form onSubmit={handleJoinRoom} >\r\n                        <input type=\"text\"\r\n                            placeholder=\"Digite o códido da sala\"\r\n                            onChange={event => setRoomCode(event.target.value)}\r\n                            value={roomCode}\r\n                        />\r\n                        <Button type=\"submit\">\r\n                            Entrar na sala\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\n","\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { FormEvent, useState } from 'react';\r\n\r\nimport ilustrationImg from '../assets/images/illustration.svg';\r\nimport { Button } from '../components/Button';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport { database } from '../services/firebase';\r\n\r\n\r\nexport function NewRoom() {\r\n    const { user } = useAuth();\r\n    const history = useHistory();\r\n\r\n    const [newRoom, setNewRoom] = useState('');\r\n\r\n    async function handleCreateRoom(event: FormEvent) {\r\n        event.preventDefault();\r\n\r\n        if (newRoom.trim() === '') {\r\n            return;\r\n        }\r\n\r\n        const roomRef = database.ref('rooms');\r\n        const firebaseRoom = await roomRef.push({\r\n            title: newRoom,\r\n            authorId: user?.id,\r\n            name: user?.name,\r\n            photo: user?.avatar,\r\n        })\r\n\r\n        history.push(`/rooms/${firebaseRoom.key}`)\r\n    }\r\n\r\n    return (\r\n        <div id=\"page-auth\">\r\n            <aside>\r\n                <img src={ilustrationImg} alt=\"Ilustração\" />\r\n                <strong>Oh feio crie salas de Q&amp;A ao-vivo</strong>\r\n                <p>Tire duvidas sobre tainha online</p>\r\n            </aside>\r\n            <main>\r\n                <div className=\"main-content\">\r\n                    <img src={user?.avatar} alt=\"Fala feio\" className=\"photo\" />\r\n                    <h1>{user?.name}</h1>\r\n                    <h2>Criar uma nova sala</h2>\r\n                    <form onSubmit={handleCreateRoom} >\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Digite o códido da sala\"\r\n                            onChange={event => setNewRoom(event.target.value)}\r\n                            value={newRoom}\r\n                        />\r\n                        <Button type=\"submit\">\r\n                            Criar sala\r\n                        </Button>\r\n                    </form>\r\n                    <p>\r\n                        Quer entrar em uma sala existente? <Link to=\"/\">clique aqui</Link>\r\n                    </p>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}","import { ReactNode } from 'react'\r\n\r\nimport './styles.scss';\r\n\r\ntype QuestionsProps = {\r\n    content: string;\r\n    author: {\r\n        name: string;\r\n        avatar: string;\r\n    }\r\n    children?: ReactNode;\r\n\r\n}\r\n\r\n\r\nexport function Questions({\r\n    content,\r\n    author,\r\n    children,\r\n}: QuestionsProps) {\r\n    return (\r\n        <div className=\"question\">\r\n            <footer>\r\n                <div className=\"user-info\">\r\n                    <img src={author.avatar} alt={author.name} />\r\n                    <span>{author.name}</span>\r\n                </div>\r\n\r\n            </footer>\r\n            <p>{content}</p>\r\n            <div className=\"like\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/copy.b8f09a77.svg\";","import copyImg from '../assets/images/copy.svg';\r\n\r\nimport '../styles/room-code.scss';\r\n\r\ntype RoomCodeProps = {\r\n    code: string;\r\n}\r\n\r\nexport function RoomCode(props: RoomCodeProps) {\r\n    function copyRoomCodeToClipboard() {\r\n        navigator.clipboard.writeText(props.code)\r\n    }\r\n\r\n    return (\r\n        <button className=\"room-code\" onClick={copyRoomCodeToClipboard}>\r\n            <div>\r\n                <img src={copyImg} alt=\"Copy room code\" />\r\n            </div>\r\n            <span> Sala #{props.code}</span>\r\n        </button>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport { database } from \"../services/firebase\";\r\nimport { useAuth } from \"./useAuth\";\r\n\r\ntype Question = {\r\n    id: string;\r\n    author: {\r\n        name: string;\r\n        avatar: string;\r\n    }\r\n    content: string;\r\n    isAnswered: boolean;\r\n    isHighlighted: boolean;\r\n    likeCount: number;\r\n    hasLiked: boolean;\r\n}\r\n\r\ntype FirebaseQuestions = Record<string, {\r\n    author: {\r\n        name: string;\r\n        avatar: string;\r\n    }\r\n    content: string;\r\n    isAnswered: boolean;\r\n    isHighlighted: boolean;\r\n    likes: Record<string, {\r\n        authorId: string;\r\n    }>\r\n}>\r\n\r\n\r\n\r\nexport function useRoom(roomId: string) {\r\n\r\n    const { user } = useAuth();\r\n    const [questions, setQuestions] = useState<Question[]>([])\r\n    const [title, setTitle] = useState('')\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const roomRef = database.ref(`rooms/${roomId}`);\r\n\r\n        roomRef.on('value', room => {\r\n            const databaseRoom = room.val();\r\n            const firebaseQuestions: FirebaseQuestions = databaseRoom.question ?? {};\r\n            const parsedQuestions = Object.entries(firebaseQuestions).map(([key, value]) => {\r\n\r\n                return {\r\n                    id: key,\r\n                    content: value.content,\r\n                    author: value.author,\r\n                    isHighlighted: value.isHighlighted,\r\n                    isAnswered: value.isAnswered,\r\n                    likeCount: Object.values(value.likes ?? {}).length,\r\n                    hasLiked: Object.values(value.likes ?? {}).some(like => like.authorId === user?.id),\r\n                }\r\n            })\r\n\r\n            setTitle(databaseRoom.title);\r\n            setQuestions(parsedQuestions);\r\n\r\n\r\n\r\n        })\r\n\r\n        // Aqui é removido os valores do usúario ao sair, assim ao entrar em outra página não havera conflito.\r\n        return () => {\r\n            roomRef.off('value')\r\n        }\r\n\r\n    }, [roomId, user?.id]);\r\n\r\n\r\n    return { questions, title }\r\n}","\r\nimport { FormEvent, useState } from 'react';\r\n\r\n\r\nimport { useParams, Link } from 'react-router-dom';\r\n\r\nimport logoImg from '../assets/images/teste.svg';\r\nimport { Button } from '../components/Button';\r\nimport { Questions } from '../components/Questions/index';\r\nimport { RoomCode } from '../components/RoomCode';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport { useRoom } from '../hooks/useRoom';\r\nimport { database } from '../services/firebase';\r\nimport '../styles/room.scss';\r\n\r\n\r\ntype RoomParams = {\r\n    id: string;\r\n}\r\n\r\n\r\nexport function Room() {\r\n    const { user } = useAuth();\r\n    const params = useParams<RoomParams>();\r\n    const [newQuestion, setNewQuestion] = useState('')\r\n\r\n    const roomId = params.id;\r\n\r\n    const { title, questions } = useRoom(roomId)\r\n\r\n\r\n\r\n\r\n\r\n    async function handleSendQuestion(event: FormEvent) {\r\n        event.preventDefault();\r\n\r\n        if (newQuestion.trim() === '') {\r\n            return;\r\n        }\r\n\r\n        if (!user) {\r\n            throw new Error('Não taix logado feio')\r\n        }\r\n\r\n        const question = {\r\n            content: newQuestion,\r\n            author: {\r\n                name: user.name,\r\n                avatar: user.avatar,\r\n            },\r\n            isHighlighted: false,\r\n            isAnswered: false,\r\n        };\r\n\r\n        await database.ref(`rooms/${roomId}/question`).push(question);\r\n\r\n        setNewQuestion('');\r\n    }\r\n\r\n    async function handleLikeQuestion(questionId: string) {\r\n        await database.ref(`rooms/${roomId}/question/${questionId}/likes`).push({\r\n            authorId: user?.id,\r\n            name: user?.name,\r\n            avatar: user?.avatar,\r\n        })\r\n    }\r\n    return (\r\n        <div id=\"page-room\">\r\n            <header>\r\n                <div className=\"content\">\r\n                    <Link to=\"/\">\r\n                        <img src={logoImg} alt=\"Se tu dix\" />\r\n                    </Link>\r\n\r\n                    <RoomCode code={params.id} />\r\n\r\n                </div>\r\n            </header >\r\n\r\n            <main>\r\n                <div className=\"room-title\">\r\n                    <h1>Sala: {title}</h1>\r\n                    {questions.length > 0 && <span>{questions.length} Pergunta(s)</span>}\r\n                </div>\r\n\r\n                <form onSubmit={handleSendQuestion}>\r\n                    <textarea placeholder=\"O que você deseja perguntar?\"\r\n                        onChange={event => setNewQuestion(event.target.value)}\r\n                        value={newQuestion}\r\n\r\n                    />\r\n                    <div className=\"form-footer\">\r\n                        {user ? (\r\n                            <div className=\"user-info\">\r\n                                <img src={user.avatar} alt={user.name} />\r\n                                <span>{user.name}</span>\r\n                            </div>\r\n                        ) : (\r\n                            <span>Para enviar uma perguntar, <button>faça seu long </button></span>\r\n                        )}\r\n                        <Button type=\"submit\" disabled={!user} >Enviar pergunta </Button>\r\n                    </div>\r\n                </form>\r\n\r\n                <div className=\"question-list\">\r\n                    {questions.map(question => {\r\n                        return (\r\n                            <Questions\r\n                                key={question.id}\r\n                                content={question.content}\r\n                                author={question.author}\r\n                            >\r\n                                <button\r\n                                    className={`like-button ${question.hasLiked ? 'liked' : ''}`}\r\n                                    type=\"button\"\r\n                                    aria-label=\"Marca como gostei\"\r\n                                    onClick={() => handleLikeQuestion(question.id)}\r\n                                >\r\n                                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <path d=\"M7 22H4C3.46957 22 2.96086 21.7893 2.58579 21.4142C2.21071 21.0391 2 20.5304 2 20V13C2 12.4696 2.21071 11.9609 2.58579 11.5858C2.96086 11.2107 3.46957 11 4 11H7M14 9V5C14 4.20435 13.6839 3.44129 13.1213 2.87868C12.5587 2.31607 11.7956 2 11 2L7 11V22H18.28C18.7623 22.0055 19.2304 21.8364 19.5979 21.524C19.9654 21.2116 20.2077 20.7769 20.28 20.3L21.66 11.3C21.7035 11.0134 21.6842 10.7207 21.6033 10.4423C21.5225 10.1638 21.3821 9.90629 21.1919 9.68751C21.0016 9.46873 20.7661 9.29393 20.5016 9.17522C20.2371 9.0565 19.9499 8.99672 19.66 9H14Z\" stroke=\"#060607\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                                    </svg>\r\n\r\n                                    {question.likeCount > 0 && <span>{question.likeCount}</span>}\r\n\r\n                                </button>\r\n                            </Questions>\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n            </main>\r\n\r\n        </div >\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\n","\r\n\r\nimport { useParams, Link } from 'react-router-dom';\r\n\r\nimport logoImg from '../assets/images/teste.svg';\r\nimport { Button } from '../components/Button';\r\nimport { Questions } from '../components/Questions/index';\r\nimport { RoomCode } from '../components/RoomCode';\r\nimport { useRoom } from '../hooks/useRoom';\r\n\r\nimport '../styles/room.scss';\r\n\r\n\r\ntype RoomParams = {\r\n    id: string;\r\n}\r\n\r\n\r\nexport function AdminRoom() {\r\n    // const { user } = useAuth();\r\n    const params = useParams<RoomParams>();\r\n\r\n\r\n    const roomId = params.id;\r\n\r\n    const { title, questions } = useRoom(roomId)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div id=\"page-room\">\r\n            <header>\r\n                <div className=\"content\">\r\n                    <Link to=\"/\">\r\n                        <img src={logoImg} alt=\"Se tu dix\" />\r\n                    </Link>\r\n                    <div>\r\n                        <RoomCode code={params.id} />\r\n                        <Button isOutlined >Encerra Sala</Button>\r\n                    </div>\r\n\r\n                </div>\r\n            </header >\r\n\r\n            <main>\r\n                <div className=\"room-title\">\r\n                    <h1>{title}</h1>\r\n                    {questions.length > 0 && <span>{questions.length} Pergunta(s)</span>}\r\n                </div>\r\n\r\n\r\n\r\n                <div>\r\n                    {questions.map(question => {\r\n                        return (\r\n                            <Questions\r\n                                key={question.id}\r\n                                content={question.content}\r\n                                author={question.author}\r\n\r\n                            />\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n            </main>\r\n\r\n        </div >\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\n","\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { Home } from './pages/Home';\r\n\r\nimport { NewRoom } from './pages/NewRoom';\r\n\r\nimport { AuthContextProvider } from './contexts/AuthContext'\r\nimport { Room } from './pages/Room';\r\nimport { AdminRoom } from './pages/AdminRoom';\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <AuthContextProvider>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/rooms/new\" component={NewRoom} />\r\n          <Route path=\"/rooms/:id\" component={Room} />\r\n          <Route path=\"/admin/rooms/:id\" component={AdminRoom} />\r\n        </Switch>\r\n      </AuthContextProvider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport './services/firebase';\r\nimport './styles/global.scss';\r\nimport './styles/auth.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}